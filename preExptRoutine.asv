function preExptData = preExptRoutine(exptInfo)
%{
PREEXPTROUTINE measures pipette resistance, seal resistance, access
resistance and resting voltage

Designed so that important parameters can be measured
as the early part of patching progresses: from electrode in the bath (pipette R),
to seal (seal R) to whole cell recording (access R...) in v-clamp and finally with a measurement
of the resting voltage (Vm) upon the switch in I=0 prior to switching to I-clamp

INPUT
exptInfo  (struct)

OUTPUT
preExptData
fields:
.pipetteResistance
.sealResistance
.initialHoldingCurrent
.initialAccessResistance
.initialInputResistance
.initialRestingVoltage

SUBFUNCTIONS CALLED:
measurePipetteResistance - used to measure pipette and seal R
measureAccessResistance  - used to measure Access, membrane and Input R.
acquireTrial -used to measure resting membrane voltage (run in I=0) and
also used to measure the resistances
saved

%}
ephysSettings

%% Measure pipette resistance
while 1
    contAns = input('\n\n Would you like to measure pipette resistance? (y/enter = yes, n = no) ','s');
    if strcmp(contAns,'y') || strcmp(contAns,'') % 'y' or enter
        type = 'pipette';
        preExptData.pipetteResistance = measurePipetteResistance(exptInfo,type);

        printVariable( preExptData.pipetteResistance , 'Pipette Resistance', 'MOhms');

        contA = input('\n Would you like to measure pipette resistance AGAIN? (y /enter = yes) (n = no, measure again): ','s');
        if  strcmp(contA,'n') || strcmp(contA,'')
            break;
        end
    else
        break
    end
end

%% Measure seal resistance
while 1
    contAns = input('\n\n Would you like to measure seal resistance? ','s');
    if strcmp(contAns,'y') || strcmp(contAns,'') % 'y' or enter
        type = 'seal';
        preExptData.sealResistance = measurePipetteResistance(exptInfo,type);

        printVariable( preExptData.sealResistance/1000 , 'Seal Resistance', 'GOhms');

        contA = input('\n Would you like to measure seal resistance AGAIN? (y /enter = yes) (n = no, measure again): ','s');
        if  strcmp(contA,'n') || strcmp(contA,'')
            break;
        end
    else
        break
    end
end

close all % close figures so they don't build up

%% Measure voltage trial to look at cell attached spikes
contAns = input('\n\n Would you like to run a trial in V-clamp to measure cell attached spikes? ','s');
if strcmp(contAns,'y')
    % build command trace
    TRIAL_FRAME_NUM = rigSettings.sampRate * rigSettings.cellAttached.Dur; %make sure rigSettings.cellAttached.Dur is correct, copy-pasted from old commented out code

    stimulus.command = zeros(1, TRIAL_FRAME_NUM);
    stimulus.name = 'cellAttachedTrial';

    [data,trialMeta] = acquireTrial(stimulus,exptInfo);

    % Save cellAttachedTrial trial, this may also be saved as trial 1 (?)
    [~, path, ~, idString] = getDataFileName(exptInfo);
    filename = [path,'\preExptTrials\',idString,'cellAttachedTrial'];
    save(filename,'data','exptInfo','trialMeta');
end

close all % close figures so they don't build up

%% Measure access and input resistance and holding current
while 1
    contAns = input('\n\n Would you like to measure access resistance? ','s');
    if strcmp(contAns,'y') || strcmp(contAns,'') % 'y' or enter
        [preExptData.initialHoldingCurrent, preExptData.initialAccessResistance, preExptData.initialInputResistance] = measureAccessResistance(exptInfo);

        printVariable( preExptData.initialHoldingCurrent , 'Holding Current', 'pA');
        printVariable( preExptData.initialAccessResistance , 'Access Resistance', 'MOhms');
        printVariable( preExptData.initialInputResistance , 'Input Resistance', 'MOhms');

        contA = input('\n Would you like to measure access resistance AGAIN? (y /enter = yes) (n = no, measure again): ','s');
        if  strcmp(contA,'n') || strcmp(contA,'')
            break;
        end
    else
        break
    end
end

close all % close figures so they don't build up

%% Measure resting voltage (I = 0)
contAns = input('\n\n Would you like to run a trial in I=0? ','s');
if strcmp(contAns,'y')
    [data,trialMeta] = acquireTrial;
    
    preExptData.initialRestingVoltage = mean(data.voltage);
    
    printVariable( preExptData.initialRestingVoltage , 'Resting Voltage', 'mV');
    
    % Save zeroCurrentTrial trial
    [~, path, ~, idString] = getDataFileName(exptInfo);
    filename = [path,'\preExptTrials\',idString,'zeroCurrentTrial'];
    save(filename,'data','exptInfo','trialMeta');
end


%% Check if preExptData was created
if ~exist( 'preExptData', 'var')
    disp('WARNING: preExptData varible is empty!! If you need that data look into this!');
    % create an empty struct as a place holder
    preExptData = struct;
end
end

%% Helper Functions
function printVariable(value, label, unit)
fprintf(['\n' label, ' = ', num2str(value), unit ])
end


